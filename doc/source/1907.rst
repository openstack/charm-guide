.. _release_notes_19.07:

===========================
19.07 (DRAFT Release Notes)
===========================

Summary
=======

The 19.07 OpenStack Charm release includes updates for the following charms.
Additional charm support status information is published in the main
`charm guide <openstack-charms.html>`__ which ultimately supersedes release
note contents.

Always use the latest stable charm revision before proceeding with topological
changes, application migrations, workload upgrades, series upgrades, or bug
reports.

Supported Charms
~~~~~~~~~~~~~~~~

* aodh
* barbican
* barbican-vault
* ceilometer
* ceilometer-agent
* ceph-mon
* ceph-osd
* ceph-proxy
* ceph-radosgw
* ceph-rbd-mirror
* cinder
* cinder-ceph
* designate
* designate-bind
* glance
* gnocchi
* hacluster
* heat
* keystone
* keystone-ldap
* lxd
* neutron-api
* neutron-openvswitch
* neutron-gateway
* neutron-dynamic-routing
* nova-cloud-controller
* nova-compute
* octavia
* octavia-diskimage-retrofit
* openstack-dashboard
* percona-cluster
* rabbitmq-server
* swift-proxy
* swift-storage
* vault

Preview Charms
~~~~~~~~~~~~~~

* barbican-softhsm
* ceph-fs
* cinder-backup
* keystone-saml-mellon
* manila
* manila-generic
* masakari
* masakari-monitors
* pacemaker-remote
* tempest

Removed Charms
~~~~~~~~~~~~~~

The following charms have been removed as part of this charm release:

* nova-lxd (retired)

New Charm Features
==================

With each new feature, there is a corresponding example bundle in the form of
a test bundle, and/or a `charm deployment guide <https://docs.openstack.org/project-deploy-guide/charm-deployment-guide/latest/>`__ 
section which details the use of the feature.  For example test bundles, see the
src/tests/bundles/ directory within the relevant charm repository.

Feature 1
~~~~~~~~~

Feature description...

nova-cloud-controller: improved SSH host key handling
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The Nova compute service uses direct (machine-to-machine) SSH connections to
perform instance migrations. Each compute host must therefore be in possession
of every other compute host's SSH host key via the knownhosts file.

This release of the nova-cloud-controller charm has improved the host key
discovery and distribution algorithm, the net effect being that the addition of
a nova-compute unit will be faster than before and the nova-cloud-controller
upgrade-charm hook will be significantly improved for large deployments.

The rest of this section covers an EXPERIMENTAL option involving the caching of
SSH host lookups (knownhosts) on each nova-compute unit.

There is a new Boolean configuration key ``cache-known-hosts`` that allows any
given host lookup to be performed just once.

.. note:: A cloud can be deployed with the ``cache-known-hosts`` key set to ``false``,
	  and be set to ``true`` post-deployment. At that point the hosts will have
	  been cached. The key only controls *whether* the cache is used or not.

If the above key is set, a new Juju action ``clear-unit-knownhost-cache`` is provided
to clear the cache. This can be applied to a unit, service, or an entire
nova-cloud-controller application. This would be needed if DNS resolution had
changed in an existing cloud or during a cloud deployment. Not clearing the
cache in such cases would result in an inconsistent set of knownhosts files.

This action will cause DNS resolution to be performed (for unit/service/application),
thus potentially triggering a relation-set on the nova-cloud-controller unit(s) and
subsequent changed hook on the related nova-compute units.

The action is used as follows, based on unit, service, or application, respectively:

   juju run-action nova-cloud-controller/0 clear-unit-knownhost-cache target=nova-compute/2
   juju run-action nova-cloud-controller/0 clear-unit-knownhost-cache target=nova-compute
   juju run-action nova-cloud-controller/0 clear-unit-knownhost-cache

In a high-availability setup, the action **must** be run on all
nova-cloud-controller units.

Preview Charm Features
======================

Preview Feature 1
~~~~~~~~~~~~~~~~~

Feature description...

Upgrading charms
================

Always use the latest stable charm revision before proceeding with topological
changes, charm application migrations, workload upgrades, series upgrades, or
bug reports.

Please ensure that the keystone charm is upgraded first.

To upgrade an existing deployment to the latest charm version simply use the
'upgrade-charm' command, for example:

.. code:: bash

    juju upgrade-charm keystone

Charm upgrades and OpenStack upgrades are two distinctly different things.
Charm upgrades ensure that the deployment is using the latest charm
revision, containing the latest charm fixes and charm features available
for a given deployment.

Charm upgrades do not cause OpenStack versions to upgrade, however OpenStack
upgrades do require the latest Charm version as pre-requisite.

Upgrading OpenStack
===================

Before upgrading OpenStack, all OpenStack Charms should be running the latest
stable charm revision.

.. note::

   Upgrading an OpenStack cloud is not without risk; upgrades should be tested
   in pre-production testing environments prior to production deployment
   upgrades.

See https://docs.openstack.org/project-deploy-guide/charm-deployment-guide/latest/app-upgrade-openstack.html
for more details.

New Bundle Features
===================

Deprecation Notices
===================

Nova LXD Charm
~~~~~~~~~~~~~~

The nova lxd subordinate charm is deprecated with this release.


Removed Features
================

Known Issues
============

Issue
~~~~~

.. warning::

    Something important.

Issue details...

Bugs Fixed
==========

This release includes NNN bug fixes. For the full list of bugs resolved for the
19.07 charms release please refer to https://launchpad.net/openstack-charms/+milestone/19.07.

Next Release Info
=================
Please see https://docs.openstack.org/charm-guide/latest for current information.
